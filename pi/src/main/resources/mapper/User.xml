<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.pi.demo.mapper.UserMapper">

    <resultMap type="team.pi.demo.pojo.User"
               id="UserResultMap">
        <id column="user_id" property="id"/>
        <result column="nickname" property="nickName"/>
        <result column="username" property="userName"/>
        <result column="password" property="password"/>
        <result column="avartar" property="avartar"/>
        <result column="deleted" property="deleted"/>
        <result column="email" property="email"/>
        <result column="belongs_to_collection" property="collection"/>
        <result column="active" property="active"/>
        <result column="code" property="code"/>
        <result column="role" property="role"/>

        <collection property="movieCollect" ofType="team.pi.demo.pojo.Movie">
            <id property="id" column="mmc.id" />
            <result property="tmdbid" column="mmc.tmdbid" />
            <result property="original_language" column="mmc.original_language" />
            <result property="original_title" column="mmc.original_title" />
            <result property="overview" column="mmc.overview" />
            <result property="budget" column="mmc.budget" />
            <result property="adult" column="mmc.adult" />
            <result property="popularity" column="mmc.popularity" />
            <result property="release_date" column="mmc.release_date" />
            <result property="revenue" column="mmc.revenue" />
            <result property="runtime" column="mmc.runtime" />
            <result property="status" column="mmc.status" />
            <result property="tagline" column="mmc.tagline" />
            <result property="title" column="mmc.title" />
            <result property="vote_average" column="mmc.vote_average" />
            <result property="vote_count" column="mmc.vote_count" />
            <result property="poster_path" column="mmc.poster_path" />
            <result property="deleted" column="mmc.deleted" />
        </collection>

        <collection property="moviePlay" ofType="team.pi.demo.pojo.Movie">
            <id property="id" column="mmp.id" />
            <result property="tmdbid" column="mmp.tmdbid" />
            <result property="original_language" column="mmp.original_language" />
            <result property="original_title" column="mmp.original_title" />
            <result property="overview" column="mmp.overview" />
            <result property="budget" column="mmp.budget" />
            <result property="adult" column="mmp.adult" />
            <result property="popularity" column="mmp.popularity" />
            <result property="release_date" column="mmp.release_date" />
            <result property="revenue" column="mmp.revenue" />
            <result property="runtime" column="mmp.runtime" />
            <result property="status" column="mmp.status" />
            <result property="tagline" column="mmp.tagline" />
            <result property="title" column="mmp.title" />
            <result property="vote_average" column="mmp.vote_average" />
            <result property="vote_count" column="mmp.vote_count" />
            <result property="poster_path" column="mmp.poster_path" />
            <result property="deleted" column="mmp.deleted" />
        </collection>
    </resultMap>


    <select id="selectUserByname" resultMap="UserResultMap">
        SELECT
        user.*,
        mmc.id "mmc.id",mmc.tmdbid "mmc.tmdbid",mmc.original_language "mmc.original_language",
        mmc.original_title "mmc.original_title", mmc.overview "mmc.overview",mmc.budget "mmc.budget",
        mmc.budget "mmc.budget", mmc.adult "mmc.adult",mmc.popularity "mmc.popularity",
        mmc.release_date "mmc.release_date",mmc.revenue "mmc.revenue",mmc.runtime "mmc.runtime",
        mmc.status "mmc.status",mmc.tagline "mmc.tagline",mmc.title "mmc.title",
        mmc.vote_average "mmc.vote_average",mmc.vote_count "mmc.vote_count",
        mmc.poster_path "mmc.poster_path",mmc.deleted "mmc.deleted",

        mmp.id "mmp.id",mmp.tmdbid "mmp.tmdbid",mmp.original_language "mmp.original_language",
        mmp.original_title "mmp.original_title", mmp.overview "mmp.overview",mmp.budget "mmp.budget",
        mmp.budget "mmp.budget", mmp.adult "mmp.adult",mmp.popularity "mmp.popularity",
        mmp.release_date "mmp.release_date",mmp.revenue "mmp.revenue",mmp.runtime "mmp.runtime",
        mmp.status "mmp.status",mmp.tagline "mmp.tagline",mmp.title "mmp.title",
        mmp.vote_average "mmp.vote_average",mmp.vote_count "mmp.vote_count",
        mmp.poster_path "mmp.poster_path",mmp.deleted "mmp.deleted"
        FROM user
            LEFT JOIN user_movies_collect umc ON user.user_id = umc.user_id
            LEFT JOIN movie_metadata mmc on umc.movie_id = mmc.id
            LEFT JOIN user_movies_play ump ON user.user_id = ump.user_id
            LEFT JOIN movie_metadata mmp on ump.movie_id = mmp.id
        where username=#{username};
    </select>


    <select id="findAll" resultType="User">
        select * from user;
    </select>

<!--    <select id="selectUserByname" resultMap="UserResultMap">-->
<!--        select * from user where username=#{username};-->
<!--    </select>-->

    <insert id="insertUser" parameterType="User">
        insert into user(nickname,username,password,email,active,code,avartar) values(#{user.nickName},#{user.userName},#{user.password},#{user.email},#{user.active},#{user.code},#{user.avartar});
    </insert>

    <select id="selectUserByCode" resultType="User">
        select * from user where code=#{code};
    </select>


    <update id="updateStatusByUserName" parameterType="String">
        update user set active = 1 where username = #{username};
    </update>

    <update id="updateUser">
        update user
        <set>
            <if test=" nickName != null and nickName != ''">
                nickname=#{nickName},
            </if>

            <if test=" password != null and password != ''">
                password=#{password},
            </if>

            <if test=" avartar != null and avartar != ''">
                avartar=#{avartar},
            </if>

            <if test=" email != null and email != ''">
                email=#{email},
            </if>

            <if test=" userName != null and userName != ''">
                username=#{userName}
            </if>
        </set>
        <where>
            username=#{userName}
        </where>
    </update>
</mapper>